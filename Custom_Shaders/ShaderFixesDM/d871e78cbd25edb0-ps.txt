// AUTOMATICALLY CONVERTED FROM SHADER FIXES 
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v0.6.30 on Sun Jul 17 16:47:39 2022
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// SV_IsFrontFace           0   x           2    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
// SV_DepthLessEqual        0    N/A oDepthLE  DEPTHLE   float    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[138], immediateIndexed
dcl_constantbuffer CB1[19], immediateIndexed
dcl_constantbuffer CB2[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective centroid v0.xyzw, position
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
dcl_output oMask
dcl_output oDepthLE
dcl_temps 18
dcl_resource_buffer (float,float,float,float) t125
dcl_resource_texture1d (float,float,float,float) t120
ld_indexable(texture1d)(float,float,float,float) r12.xyzw, l(12, 0, 0, 0), t120.xyzw
ieq r13.x, r12.z, l(0x3f800000)
discard_nz r13.x
mul r0.xy, v1.zwzz, cb2[10].xxxx
sample_b_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0, cb0[137].y
add r0.y, -r0.x, v1.w
mad r0.x, cb2[10].y, r0.y, r0.x
add r0.x, -r0.x, l(1.000000)
add r0.y, -r0.x, cb2[10].z
ge r0.x, cb2[10].z, r0.x
lt r0.y, l(0.000010), |r0.y|
and r0.x, r0.y, r0.x
and r0.x, r0.x, l(0x3f800000)
sample_b_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t3.xwyz, s3, cb0[137].y
sample_b_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t2.xywz, s2, cb0[137].y
add r0.y, -r0.z, r0.y
mad r0.x, r0.x, r0.y, r0.z
mul r1.xyzw, v1.xyxy, cb2[12].zzzz
mad r1.xyzw, cb0[136].zzzz, l(-0.200000, 0.300000, 0.200000, 0.200000), r1.xyzw
sample_b_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t1.yxzw, s1, cb0[137].y
sample_b_indexable(texture2d)(float,float,float,float) r0.z, r1.zwzz, t1.yzxw, s1, cb0[137].y
mul r0.y, r0.z, r0.y
mul r0.y, r0.y, cb2[12].w
mul_sat r0.y, r0.y, cb2[13].y
dp2 r0.z, r0.yyyy, cb2[13].zzzz
add r0.y, r0.y, cb2[14].x
round_pi r0.z, r0.z
mad r0.z, -r0.z, l(0.500000), l(1.000000)
mad r0.w, r0.z, cb2[13].w, -r0.x
mul r0.z, r0.z, cb2[13].w
mad r0.x, r0.z, r0.w, r0.x
add r0.z, -r0.x, l(1.000000)
ld_indexable(buffer)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw
mov r5.x, v0.x
mul r6.xyzw, v0.yyyy, cb0[45].xyzw
mad r6.xyzw, r5.xxxx, cb0[44].xyzw, r6.xyzw
mad r6.xyzw, v0.zzzz, cb0[46].xyzw, r6.xyzw
add r6.xyzw, r6.xyzw, cb0[47].xyzw
div r7.x, l(0.500000), cb0[126].z
mad r7.y, r6.w, r4.y, l(-1.000000)
mul r7.y, r7.y, r7.x
mad r5.x, r4.x, r7.y, r5.x
mul r1.xyzw, v0.yyyy, cb0[45].xyzw
mad r1.xyzw, r5.xxxx, cb0[44].xyzw, r1.xyzw
mad r1.xyzw, v0.zzzz, cb0[46].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb0[47].xyzw
div r1.xyz, r1.xyzx, r1.wwww
add r1.xyz, r1.xyzx, -cb0[66].xyzx
mov r2.xy, -cb1[18].xyxx
mov r2.z, -cb2[15].x
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.w, cb0[136].z, l(0.500000)
mov r2.yz, l(0,1.000000,0,0)
add r2.zw, r2.zzzw, v1.xxxy
sample_b_indexable(texture2d)(float,float,float,float) r0.w, r2.zwzz, t1.yzwx, s1, cb0[137].y
ge r1.w, cb2[17].x, l(1.000000)
movc r2.z, r1.w, cb2[16].z, cb2[16].w
mul r2.z, r2.z, cb2[17].y
mad r0.w, r0.w, cb2[16].y, r2.z
mul r3.z, r0.w, l(0.500000)
mul r3.xy, cb2[8].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
add r1.xyz, |r1.xyzx|, -r3.xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w
div_sat r0.w, r0.w, cb2[17].z
add r0.w, -r0.w, l(1.000000)
add r1.x, -r0.w, l(1.000000)
movc r0.w, r1.w, r1.x, r0.w
mad r1.x, -r0.y, r0.w, l(1.000000)
mad r0.w, r0.y, r0.w, -r0.y
mad r0.y, cb2[18].y, r0.w, r0.y
mul r0.y, r0.y, cb2[18].z
mov r3.x, l(0)
mov r3.y, cb0[136].z
add r1.yz, r3.xxyx, v1.xxyx
sample_b_indexable(texture2d)(float,float,float,float) r0.w, r1.yzyy, t1.yzwx, s1, cb0[137].y
mad r0.w, r0.w, l(0.100000), r1.x
ge r0.w, r0.w, cb2[17].w
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.z, r0.w
mad r0.x, cb2[18].x, r0.z, r0.x
mad r0.x, r0.x, r0.y, l(-0.333300)
lt r1.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r0.xxxx
and r0.y, r1.x, l(8)
movc r0.y, r1.y, l(9), r0.y
movc r0.y, r1.z, l(13), r0.y
utof r0.z, r0.y
add r0.z, r0.z, l(-0.500000)
lt r0.xz, r0.xxzx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.z, r1.w, l(0), r0.z
ilt r0.w, l(1), cb0[129].x
and r0.z, r0.w, r0.z
not r0.w, r0.w
discard_nz r0.z
and r0.x, r0.w, r0.x
or r0.z, r0.w, r1.w
movc oMask, r0.z, l(15), r0.y
discard_nz r0.x
max r0.x, cb2[20].x, l(0.000000)
mad r0.x, r2.y, v0.w, r0.x
mov r2.x, v0.z
mul r0.y, r2.x, v0.w
div oDepthLE, r0.y, r0.x
mov o0.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used
