// AUTOMATICALLY CONVERTED FROM SHADER FIXES 
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v0.6.30 on Sat Jul 16 19:33:48 2022
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float
// TEXCOORD                11   xyzw        1     NONE   float
// TEXCOORD                 0   xy          2     NONE   float   xy
// TEXCOORD                 7   xyzw        3     NONE   float   xyzw
// SV_Position              0   xyzw        4      POS   float   xyz
// SV_IsFrontFace           0   x           5    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[182], immediateIndexed
dcl_constantbuffer CB1[20], immediateIndexed
dcl_constantbuffer CB2[115], immediateIndexed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_constantbuffer CB4[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v4.xyz, position
dcl_output o0.xyzw
dcl_output oMask
dcl_temps 19
dcl_resource_buffer (float,float,float,float) t125
dcl_resource_texture1d (float,float,float,float) t120
ld_indexable(texture1d)(float,float,float,float) r12.xyzw, l(12, 0, 0, 0), t120.xyzw
ieq r13.x, r12.z, l(0x3f800000)
discard_nz r13.x
ld_indexable(buffer)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw
mov r6.x, v4.x
mul r7.xyzw, v4.yyyy, cb0[45].xyzw
mad r7.xyzw, r6.xxxx, cb0[44].xyzw, r7.xyzw
mad r7.xyzw, v4.zzzz, cb0[46].xyzw, r7.xyzw
add r7.xyzw, r7.xyzw, cb0[47].xyzw
div r8.x, l(0.500000), cb0[126].z
mad r8.y, r7.w, r5.y, l(-1.000000)
mul r8.y, r8.y, r8.x
mad r6.x, r5.x, r8.y, r6.x
mul r0.xyzw, v4.yyyy, cb0[45].xyzw
mad r0.xyzw, r6.xxxx, cb0[44].xyzw, r0.xyzw
mad r0.xyzw, v4.zzzz, cb0[46].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[47].xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r0.xyz, r0.xyzx, -cb0[66].xyzx
mad r1.xyz, cb4[2].xyzx, cb3[1].xyzx, cb4[3].xyzx
sample_b_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t1.yzwx, s1, cb0[137].y
ilt r1.w, l(1), cb0[129].x
add r0.w, r0.w, l(-0.333300)
lt r2.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r0.wwww
and r2.x, r2.x, l(8)
movc r2.x, r2.y, l(9), r2.x
movc r2.x, r2.z, l(13), r2.x
utof r2.y, r2.x
add r2.y, r2.y, l(-0.500000)
lt r2.y, r2.y, l(0.000000)
movc r2.y, r2.w, l(0), r2.y
and r2.y, r1.w, r2.y
discard_nz r2.y
not r1.w, r1.w
lt r0.w, r0.w, l(0.000000)
and r0.w, r1.w, r0.w
discard_nz r0.w
or r0.w, r1.w, r2.w
movc oMask, r0.w, l(15), r2.x
lt r0.w, l(0.000000), cb2[114].w
if_nz r0.w
  mul r2.xyz, r0.yyyy, cb0[5].xywx
  mad r2.xyz, r0.xxxx, cb0[4].xywx, r2.xyzx
  mad r2.xyz, r0.zzzz, cb0[6].xywx, r2.xyzx
  add r2.xyz, r2.xyzx, cb0[7].xywx
  div r2.xy, r2.xyxx, r2.zzzz
  mad r3.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r2.z, cb0[181].x, cb0[181].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb0[181].z
  mul r3.z, r0.w, cb0[180].z
  sample_l_indexable(texture3d)(float,float,float,float) r2.xyzw, r3.xyzx, t0.xyzw, s0, l(0.000000)
  mul r3.x, r2.w, v3.w
  mad r2.xyz, v3.xyzx, r2.wwww, r2.xyzx
else
  mov r2.xyz, v3.xyzx
  mov r3.x, v3.w
endif
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb0[134].x
if_nz r0.w
  add r3.yzw, r0.xxyz, -cb1[5].xxyz
  add r4.xyz, cb1[19].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.yzw, r4.xxyz, |r3.yyzw|
  or r0.w, r3.z, r3.y
  or r0.w, r3.w, r0.w
  dp3 r0.x, r0.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.x, r0.x, l(0.002000)
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r0.xyz, r0.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r1.xyz, r0.wwww, r0.xyzx, r1.xyzx
endif
mad o0.xyz, r1.xyzx, r3.xxxx, r2.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
