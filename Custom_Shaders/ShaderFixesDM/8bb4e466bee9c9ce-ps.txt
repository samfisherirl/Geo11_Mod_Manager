// AUTOMATICALLY CONVERTED FROM SHADER FIXES 
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v0.6.38 on Wed Jul 20 22:46:47 2022
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float
// TEXCOORD                11   xyzw        1     NONE   float
// TEXCOORD                 0   xy          2     NONE   float   xy
// TEXCOORD                 7   xyzw        3     NONE   float   xyzw
// TEXCOORD                 9   xyz         4     NONE   float   xyz
// SV_Position              0   xyzw        5      POS   float   xyz
// SV_IsFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Coverage              0    N/A    oMask COVERAGE    uint    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[182], immediateIndexed
dcl_constantbuffer CB1[20], immediateIndexed
dcl_constantbuffer CB2[115], immediateIndexed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_constantbuffer CB4[29], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps_siv linear noperspective v5.xyz, position
dcl_output o0.xyzw
dcl_output oMask
dcl_temps 21
dcl_resource_buffer (float,float,float,float) t125
dcl_resource_texture1d (float,float,float,float) t120
ld_indexable(texture1d)(float,float,float,float) r12.xyzw, l(12, 0, 0, 0), t120.xyzw
ieq r13.x, r12.z, l(0x3f800000)
discard_nz r13.x
ld_indexable(buffer)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw
mov r8.x, v5.x
mul r9.xyzw, v5.yyyy, cb0[45].xyzw
mad r9.xyzw, r8.xxxx, cb0[44].xyzw, r9.xyzw
mad r9.xyzw, v5.zzzz, cb0[46].xyzw, r9.xyzw
add r9.xyzw, r9.xyzw, cb0[47].xyzw
div r10.x, l(0.500000), cb0[126].z
mad r10.y, r9.w, r7.y, l(-1.000000)
mul r10.y, r10.y, r10.x
mad r8.x, r7.x, r10.y, r8.x
mul r0.xyzw, v5.yyyy, cb0[45].xyzw
mad r0.xyzw, r8.xxxx, cb0[44].xyzw, r0.xyzw
mad r0.xyzw, v5.zzzz, cb0[46].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[47].xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r0.xyz, r0.xyzx, -cb0[66].xyzx
add r1.xyz, v4.xyzx, -cb0[66].xyzx
mul r2.xyz, cb3[1].xyzx, cb4[2].xyzx
mov r3.xz, l(0,0,0,0)
mul r3.y, cb0[136].z, l(0.500000)
mad r4.xy, v2.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000), r3.xyxx
sample_b_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.yzwx, s1, cb0[137].y
mul r4.xyz, r0.wwww, cb4[4].xyzx
mad r5.xyz, -r0.wwww, cb4[4].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, cb4[20].xxxx, r5.xyzx, r4.xyzx
mul r5.xyzw, v2.xyxy, cb4[21].wwww
mad r5.xyzw, cb0[136].zzzz, l(-0.200000, 0.300000, 0.200000, 0.200000), r5.xyzw
sample_b_indexable(texture2d)(float,float,float,float) r0.w, r5.xyxx, t1.yzwx, s1, cb0[137].y
sample_b_indexable(texture2d)(float,float,float,float) r1.w, r5.zwzz, t1.yzwx, s1, cb0[137].y
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, cb4[22].x
mul_sat r0.w, r0.w, cb4[22].z
dp2 r1.w, r0.wwww, cb4[22].wwww
round_pi r1.w, r1.w
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mul r1.w, r1.w, cb4[23].x
mad r4.xyz, r1.wwww, r4.xyzx, -r2.xyzx
mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
add r3.xy, r3.xyxx, v2.xyxx
sample_b_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t2.xyzw, s2, cb0[137].y
add r0.w, r0.w, cb4[23].y
mov r5.xy, -cb1[18].xyxx
mov r5.z, -cb4[24].y
add r5.xyz, r0.xyzx, r5.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t1.yzwx, s1, cb0[137].y
ge r2.w, cb4[26].y, l(1.000000)
movc r3.x, r2.w, cb4[25].w, cb4[26].x
mul r3.x, r3.x, cb4[26].z
mad r1.w, r1.w, cb4[25].z, r3.x
mul r6.xy, cb4[8].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r6.z, r1.w, l(0.500000)
add r5.xyz, |r5.xyzx|, -r6.xyzx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.w, r5.xyzx, r5.xyzx
sqrt r1.w, r1.w
div_sat r1.w, r1.w, cb4[26].w
add r1.w, -r1.w, l(1.000000)
add r3.x, -r1.w, l(1.000000)
movc r1.w, r2.w, r3.x, r1.w
mad r2.w, -r0.w, r1.w, l(1.000000)
mov r3.w, cb0[136].z
add r3.xy, r3.zwzz, v2.xyxx
sample_b_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t1.xyzw, s1, cb0[137].y
mad r2.w, r3.x, l(0.100000), r2.w
ge r2.w, r2.w, cb4[27].x
and r2.w, r2.w, l(0x3f800000)
add r3.xyz, -r2.xyzx, r4.xyzx
mul r3.xyz, r2.wwww, r3.xyzx
mad r2.xyz, cb4[27].yyyy, r3.xyzx, r2.xyzx
add r2.xyz, r2.xyzx, cb4[9].xyzx
mad r1.w, r0.w, r1.w, -r0.w
mad r0.w, cb4[27].z, r1.w, r0.w
add r1.xyz, r1.xyzx, -cb4[15].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
sqrt r1.w, r1.w
div r1.xyz, r1.xyzx, r1.wwww
dp3_sat r1.x, r1.xyzx, cb4[12].xyzx
lt r1.yz, l(0.000000, 0.000010, 0.000010, 0.000000), |cb4[28].xxzx|
ge r3.xy, cb4[28].xzxx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r1.w, r3.x, l(1.000000), r1.x
movc r1.x, r1.y, r1.w, r1.x
mul r0.w, r0.w, r1.x
mul r0.w, r0.w, cb4[28].y
add r1.xyw, cb1[18].xyxz, cb4[18].xyxz
add r1.xyw, -r0.xyxz, r1.xyxw
dp3_sat r1.x, cb4[19].xyzx, r1.xywx
add r1.y, -r1.x, l(1.000000)
movc r1.x, r3.y, r1.y, r1.x
movc r1.x, r1.z, r1.x, l(1.000000)
mul r0.w, r0.w, r1.x
sample_b_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t3.xyzw, s3, cb0[137].y
ilt r1.y, l(1), cb0[129].x
mad r0.w, r1.x, r0.w, l(-0.333300)
lt r3.xyzw, l(0.006667, 0.166675, 0.333350, 0.500025), r0.wwww
and r1.x, r3.x, l(8)
movc r1.x, r3.y, l(9), r1.x
movc r1.x, r3.z, l(13), r1.x
utof r1.z, r1.x
add r1.z, r1.z, l(-0.500000)
lt r1.z, r1.z, l(0.000000)
movc r1.z, r3.w, l(0), r1.z
and r1.z, r1.y, r1.z
discard_nz r1.z
not r1.y, r1.y
lt r0.w, r0.w, l(0.000000)
and r0.w, r1.y, r0.w
discard_nz r0.w
or r0.w, r1.y, r3.w
movc oMask, r0.w, l(15), r1.x
lt r0.w, l(0.000000), cb2[114].w
if_nz r0.w
  mul r1.xyz, r0.yyyy, cb0[5].xywx
  mad r1.xyz, r0.xxxx, cb0[4].xywx, r1.xyzx
  mad r1.xyz, r0.zzzz, cb0[6].xywx, r1.xyzx
  add r1.xyz, r1.xyzx, cb0[7].xywx
  div r1.xy, r1.xyxx, r1.zzzz
  mad r3.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.w, r1.z, cb0[181].x, cb0[181].y
  log r0.w, r0.w
  mul r0.w, r0.w, cb0[181].z
  mul r3.z, r0.w, cb0[180].z
  sample_l_indexable(texture3d)(float,float,float,float) r1.xyzw, r3.xyzx, t0.xyzw, s0, l(0.000000)
  mul r3.x, r1.w, v3.w
  mad r1.xyz, v3.xyzx, r1.wwww, r1.xyzx
else
  mov r1.xyz, v3.xyzx
  mov r3.x, v3.w
endif
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.w, l(0.000000), cb0[134].x
if_nz r0.w
  add r3.yzw, r0.xxyz, -cb1[5].xxyz
  add r4.xyz, cb1[19].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  lt r3.yzw, r4.xxyz, |r3.yyzw|
  or r0.w, r3.z, r3.y
  or r0.w, r3.w, r0.w
  dp3 r0.x, r0.xyzx, l(0.577000, 0.577000, 0.577000, 0.000000)
  mul r0.x, r0.x, l(0.002000)
  frc r0.x, r0.x
  lt r0.x, l(0.500000), r0.x
  movc r0.xyz, r0.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r2.xyz, r0.wwww, r0.xyzx, r2.xyzx
endif
mad o0.xyz, r2.xyzx, r3.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
